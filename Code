<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SaiTeja.T - Portfolio</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #0d1117;
            color: #c9d1d9;
        }
        /* Custom scrollbar for a sleek look */
        ::-webkit-scrollbar {
            width: 8px;
        }
        ::-webkit-scrollbar-track {
            background: #161b22;
        }
        ::-webkit-scrollbar-thumb {
            background: #30363d;
            border-radius: 4px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #444c56;
        }
        /* Style for the 3D canvas container */
        #hero-canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }
        /* Overlay text styles */
        #hero-content {
            position: relative;
            z-index: 2;
            pointer-events: none; /* Allows mouse events to pass through to the canvas */
        }
        
        /* Custom animations for sections */
        .animate-fade-in-up {
            animation: fadeInUp 0.8s ease-out forwards;
            opacity: 0;
        }
        .animate-slide-in {
            animation: slideIn 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
            opacity: 0;
            transform: translateY(20px);
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .animation-delay-200 { animation-delay: 0.2s; }
        .animation-delay-400 { animation-delay: 0.4s; }
        .animation-delay-600 { animation-delay: 0.6s; }
        .animation-delay-800 { animation-delay: 0.8s; }
        
        /* Add hover effect for skill tags */
        .skill-tag {
            transition: all 0.3s ease;
        }
        .skill-tag:hover {
            transform: scale(1.1);
            box-shadow: 0 0 15px rgba(14, 165, 233, 0.5); /* sky-500 shadow */
        }
    </style>
</head>
<body class="antialiased">

    <!-- Navigation Bar -->
    <header class="sticky top-0 z-50 bg-gray-900/50 backdrop-blur-md">
        <nav class="container mx-auto px-4 py-4 flex justify-between items-center">
            <a href="#" class="text-2xl font-bold text-sky-400 hover:text-sky-300 transition-colors">SaiTeja.T</a>
            <div class="hidden md:flex space-x-6">
                <a href="#about" class="text-gray-300 hover:text-sky-400 transition-colors">About</a>
                <a href="#projects" class="text-gray-300 hover:text-sky-400 transition-colors">Projects</a>
                <a href="#skills" class="text-gray-300 hover:text-sky-400 transition-colors">Skills</a>
                <a href="#contact" class="text-gray-300 hover:text-sky-400 transition-colors">Contact</a>
            </div>
            <!-- Mobile Menu Button (SVG Icon) -->
            <button id="mobile-menu-button" class="md:hidden text-gray-300 hover:text-sky-400">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-menu"><line x1="4" x2="20" y1="12" y2="12"/><line x1="4" x2="20" y1="6" y2="6"/><line x1="4" x2="20" y1="18" y2="18"/></svg>
            </button>
        </nav>
        <!-- Mobile Menu (Hidden by default) -->
        <div id="mobile-menu" class="hidden md:hidden bg-gray-800/80 backdrop-blur-sm px-4 py-2">
            <a href="#about" class="block py-2 text-gray-300 hover:text-sky-400 transition-colors">About</a>
            <a href="#projects" class="block py-2 text-gray-300 hover:text-sky-400 transition-colors">Projects</a>
            <a href="#skills" class="block py-2 text-gray-300 hover:text-sky-400 transition-colors">Skills</a>
            <a href="#contact" class="block py-2 text-gray-300 hover:text-sky-400 transition-colors">Contact</a>
        </div>
    </header>

    <main>
        <!-- Hero Section with Three.js Background -->
        <section id="hero" class="relative min-h-screen flex items-center justify-center p-8 overflow-hidden">
            <canvas id="hero-canvas"></canvas>
            <div id="hero-content" class="text-center">
                <h1 class="text-5xl md:text-7xl font-bold text-white mb-4 animate-fade-in-up">
                    <span class="text-sky-400">Hello, I'm</span> SaiTeja.T
                </h1>
                <p class="text-lg md:text-2xl text-gray-300 mb-8 animate-fade-in-up animation-delay-200">
                    An <span class="text-sky-300">ECE Btech 4th Year Student</span> & Aspiring Developer
                </p>
                <a href="#contact" class="px-8 py-3 bg-sky-500 text-white font-semibold rounded-full shadow-lg hover:bg-sky-600 transition-transform transform hover:scale-105 animate-fade-in-up animation-delay-400 inline-block">
                    Get in Touch
                </a>
            </div>
        </section>

        <!-- About Section -->
        <section id="about" class="container mx-auto px-4 py-24 text-center opacity-0 animate-fade-in-up" data-animation-target>
            <h2 class="text-4xl font-bold mb-4 text-sky-400">About Me</h2>
            <p class="max-w-3xl mx-auto text-lg text-gray-300 leading-relaxed">
                I am a passionate ECE student with a keen interest in web development. I specialize in building responsive and performant applications. I am always eager to learn new technologies and take on challenging projects.
            </p>
        </section>

        <!-- Projects Section -->
        <section id="projects" class="bg-gray-800 px-4 py-24">
            <div class="container mx-auto">
                <h2 class="text-4xl font-bold mb-12 text-center text-sky-400 opacity-0 animate-fade-in-up" data-animation-target>My Projects</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    <!-- Project Card 1 -->
                    <div class="bg-gray-900 rounded-2xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 transform hover:-translate-y-2 opacity-0 animate-slide-in" data-animation-target>
                        <img src="https://placehold.co/600x400/1e293b/94a3b8?text=Project+1" alt="Project 1" class="rounded-lg mb-4 w-full h-48 object-cover">
                        <h3 class="text-2xl font-semibold mb-2 text-white">Interactive Dashboard</h3>
                        <p class="text-gray-400 mb-4">A data visualization tool built with React and D3.js to display real-time metrics.</p>
                        <a href="#" class="text-sky-400 hover:text-sky-300 font-medium">View Project &rarr;</a>
                    </div>
                    <!-- Project Card 2 -->
                    <div class="bg-gray-900 rounded-2xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 transform hover:-translate-y-2 opacity-0 animate-slide-in animation-delay-200" data-animation-target>
                        <img src="https://placehold.co/600x400/1e293b/94a3b8?text=Project+2" alt="Project 2" class="rounded-lg mb-4 w-full h-48 object-cover">
                        <h3 class="text-2xl font-semibold mb-2 text-white">E-commerce Platform</h3>
                        <p class="text-gray-400 mb-4">A full-stack e-commerce site with user authentication and payment integration.</p>
                        <a href="#" class="text-sky-400 hover:text-sky-300 font-medium">View Project &rarr;</a>
                    </div>
                    <!-- Project Card 3 -->
                    <div class="bg-gray-900 rounded-2xl shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 transform hover:-translate-y-2 opacity-0 animate-slide-in animation-delay-400" data-animation-target>
                        <img src="https://placehold.co/600x400/1e293b/94a3b8?text=Project+3" alt="Project 3" class="rounded-lg mb-4 w-full h-48 object-cover">
                        <h3 class="text-2xl font-semibold mb-2 text-white">Blog Application</h3>
                        <p class="text-gray-400 mb-4">A simple, fast, and SEO-friendly blog powered by a custom CMS.</p>
                        <a href="#" class="text-sky-400 hover:text-sky-300 font-medium">View Project &rarr;</a>
                    </div>
                </div>
            </div>
        </section>

        <!-- Skills Section -->
        <section id="skills" class="container mx-auto px-4 py-24 text-center opacity-0 animate-fade-in-up" data-animation-target>
            <h2 class="text-4xl font-bold mb-12 text-sky-400">My Skills</h2>
            <div class="flex flex-wrap justify-center gap-4 max-w-4xl mx-auto">
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">HTML5</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">CSS3</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">JavaScript</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">React.js</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">Node.js</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">Express.js</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">Tailwind CSS</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">Python</span>
                <span class="skill-tag inline-block px-4 py-2 rounded-full bg-gray-700 text-gray-200 text-lg font-medium shadow-md">SQL</span>
            </div>
        </section>

        <!-- Contact Section -->
        <section id="contact" class="bg-gray-800 px-4 py-24 opacity-0 animate-fade-in-up" data-animation-target>
            <div class="container mx-auto max-w-2xl">
                <h2 class="text-4xl font-bold mb-8 text-center text-sky-400">Contact Me</h2>
                <form class="space-y-6">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-300">Name</label>
                        <input type="text" id="name" name="name" class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600 focus:border-sky-500 focus:ring-sky-500 text-white" placeholder="John Doe">
                    </div>
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-300">Email</label>
                        <input type="email" id="email" name="email" class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600 focus:border-sky-500 focus:ring-sky-500 text-white" placeholder="john.doe@example.com">
                    </div>
                    <div>
                        <label for="message" class="block text-sm font-medium text-gray-300">Message</label>
                        <textarea id="message" name="message" rows="4" class="mt-1 block w-full rounded-md bg-gray-700 border-gray-600 focus:border-sky-500 focus:ring-sky-500 text-white" placeholder="Your message here..."></textarea>
                    </div>
                    <div>
                        <button type="submit" class="w-full px-4 py-2 bg-sky-500 text-white font-semibold rounded-md shadow-lg hover:bg-sky-600 transition-colors">
                            Send Message
                        </button>
                    </div>
                </form>
            </div>
        </section>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-900 py-8 text-center text-gray-400">
        <p>&copy; 2024 SaiTeja.T. All Rights Reserved.</p>
    </footer>

    <!-- Three.js Library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

    <!-- Custom JavaScript for the Three.js Animation and Mobile Menu -->
    <script>
        // === Three.js Background Animation (Dynamic Particle System) ===
        window.onload = function() {
            const canvas = document.getElementById('hero-canvas');
            const sizes = { width: window.innerWidth, height: window.innerHeight };
            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 1000);
            camera.position.z = 100;
            const renderer = new THREE.WebGLRenderer({ canvas: canvas, alpha: true });
            renderer.setSize(sizes.width, sizes.height);
            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));

            // Create a particle geometry
            const particleCount = 2000;
            const positions = new Float32Array(particleCount * 3);
            const velocities = new Float32Array(particleCount * 3);
            const colors = new Float32Array(particleCount * 3);
            const particleSize = 1;

            for (let i = 0; i < particleCount * 3; i += 3) {
                // Initial positions
                positions[i] = (Math.random() - 0.5) * 200;
                positions[i + 1] = (Math.random() - 0.5) * 200;
                positions[i + 2] = (Math.random() - 0.5) * 200;

                // Random velocities
                velocities[i] = (Math.random() - 0.5) * 0.1;
                velocities[i + 1] = (Math.random() - 0.5) * 0.1;
                velocities[i + 2] = (Math.random() - 0.5) * 0.1;

                // Colors
                colors[i] = 0.055; // R (0x0ea5e9)
                colors[i+1] = 0.647; // G
                colors[i+2] = 0.914; // B
            }

            const particleGeometry = new THREE.BufferGeometry();
            particleGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));
            particleGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));

            const particleMaterial = new THREE.PointsMaterial({
                size: particleSize,
                sizeAttenuation: true,
                transparent: true,
                blending: THREE.AdditiveBlending,
                vertexColors: true
            });

            const particles = new THREE.Points(particleGeometry, particleMaterial);
            scene.add(particles);
            
            // Mouse interaction variables
            let mouseX = 0;
            let mouseY = 0;

            document.addEventListener('mousemove', (event) => {
                mouseX = (event.clientX / sizes.width) * 2 - 1;
                mouseY = -(event.clientY / sizes.height) * 2 + 1;
            });

            window.addEventListener('resize', () => {
                sizes.width = window.innerWidth;
                sizes.height = window.innerHeight;
                camera.aspect = sizes.width / sizes.height;
                camera.updateProjectionMatrix();
                renderer.setSize(sizes.width, sizes.height);
                renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
            });

            // Animation loop
            const clock = new THREE.Clock();
            const animate = () => {
                const elapsedTime = clock.getElapsedTime();

                // Animate particles
                const particlePositions = particleGeometry.attributes.position.array;
                for (let i = 0; i < particleCount * 3; i += 3) {
                    particlePositions[i] += velocities[i];
                    particlePositions[i + 1] += velocities[i + 1];
                    particlePositions[i + 2] += velocities[i + 2];

                    // Reset particles that go out of bounds
                    if (Math.abs(particlePositions[i]) > 100 || Math.abs(particlePositions[i + 1]) > 100 || Math.abs(particlePositions[i + 2]) > 100) {
                        particlePositions[i] = (Math.random() - 0.5) * 200;
                        particlePositions[i + 1] = (Math.random() - 0.5) * 200;
                        particlePositions[i + 2] = (Math.random() - 0.5) * 200;
                    }
                }
                particleGeometry.attributes.position.needsUpdate = true;

                // Rotate the particle system with mouse
                particles.rotation.y += (mouseX * 0.5 - particles.rotation.y) * 0.05;
                particles.rotation.x += (mouseY * 0.5 - particles.rotation.x) * 0.05;
                
                renderer.render(scene, camera);
                requestAnimationFrame(animate);
            };
            animate();
        };

        // === Scroll Animation Observer ===
        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.remove('opacity-0');
                    entry.target.classList.add('animate-fade-in-up');
                    observer.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.1 
        });

        document.querySelectorAll('[data-animation-target]').forEach(section => {
            observer.observe(section);
        });

        // === Mobile Menu Functionality ===
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');

        mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });

        const mobileMenuLinks = mobileMenu.querySelectorAll('a');
        mobileMenuLinks.forEach(link => {
            link.addEventListener('click', () => {
                mobileMenu.classList.add('hidden');
            });
        });
    </script>
</body>
</html>
